admin(auto-delete?) of sad-sack players (those what ain't paid)
slimmed down game updates using ActionCable to do auto updates for players who are logged in
    pub-sub first for saving the games
        each admin game has a channel (does this risk being too heavyweight?)
        when a game is changed, that change is either saved or sent
        if saved, the button is installed, and the existing code is used
        if sent, a new route is used GameController#update and the result is in JSON
        need to get rid of the page reload when games are sent in bulk.
        player's game is subscribed to the publish for the admin's game of the same label
    show the games that aren't updated by a player in red!
        behavior summary in updateLocalBracket:
          - update input.node in the Store
          - update the options in the descendant
          -- if we invalidated its winner, set descendant to red (if descWinLabel == input.invalidated)
          -- else if it had a winner, set that <option/>'s selected property to true
          -- else set the first child to have 'Choose winner...' and set its selected prop to true
          - if input.node had a previous winner (oldWinLabel exists and isn't empty string)
          -- invalidate that winner in descendant (input.invalidate = oldWinLabel, if invalidate isn't already set)
          -- recurse for descendant node
          - if it didn't have a winner
          -- quit
    after brackets are locked, players subscribe to the admin's game to get updates when they are changed
figure out if a machine-learning technique can improve scenario computation run-time
right-click on a player in the left column to directly compare future chances
calculate "potential points" remaining for a bracket
show "potential (or final, as appropriate) points/original potential points"


Steps to improve bracket loading performance:
    - Write a test that creates the admin, and checks for the bracket and certain features of the bracket (like teams
      initialized, etc., and it can be saved and retrieved)
    - Write a test that creates a player, and checks that the bracket isn't a clone of the admin's but the teams are
      clones
    - Mod the code to create the admin's bracket using the Game and Team serializers
